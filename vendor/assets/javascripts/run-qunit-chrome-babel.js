function _asyncToGenerator(a){return function(){var b=a.apply(this,arguments);return new Promise(function(c,d){function e(f,g){try{var h=b[f](g),i=h.value}catch(j){return void d(j)}return h.done?void c(i):Promise.resolve(i).then(function(j){e('next',j)},function(j){e('throw',j)})}return e('next')})}}var args=process.argv.slice(2);(1>args.length||2<args.length)&&(console.log('Usage: node run-qunit-chrome.js <URL> <timeout>'),process.exit(1));const chromeLauncher=require('chrome-launcher'),CDP=require('chrome-remote-interface');_asyncToGenerator(function*(){(()=>{var f=_asyncToGenerator(function*(){return yield chromeLauncher.launch({chromeFlags:['--disable-gpu','--headless']})});return function(){return f.apply(this,arguments)}})();const b=yield a(),c=yield CDP({port:b.port}),{Page:d,Runtime:e}=c;yield d.enable(),yield e.enable(),e.consoleAPICalled(function(f){const g=f.args[0].value;'.'===g||'F'===g?process.stdout.write(g):console.log(g)}),d.navigate({url:args[0]}),d.loadEventFired(_asyncToGenerator(function*(){yield e.evaluate({expression:`(${qunit_script})()`});const f=parseInt(args[1]||3e5,10);var g=Date.now(),h=setInterval(_asyncToGenerator(function*(){if(Date.now()>g+f)console.error('Tests timed out'),c.close(),b.kill(),process.exit(124);else{const i=yield e.evaluate({expression:`(${check_script})()`});'undefined'!==i.result.type&&(clearInterval(h),c.close(),b.kill(),0<i.value?process.exit(1):process.exit())}}),250)}))})();function logQUnit(){var a=[],b=[],c=[];console.log('\nRunning: '+JSON.stringify(QUnit.urlParams)+'\n'),QUnit.config.testTimeout=1e4,QUnit.moduleDone(function(d){if(d.failed){var e='Module Failed: '+d.name+'\n'+b.join('\n');a.push(e),b=[]}}),QUnit.testDone(function(d){if(d.failed){var e='  Test Failed: '+d.name+c.join('    ');b.push(e),c=[],console.log('F')}else console.log('.')}),QUnit.log(function(d){if(!d.result){var e='\n    Assertion Failed:';d.message&&(e+=' '+d.message),d.expected&&(e+='\n      Expected: '+d.expected+', Actual: '+d.actual),c.push(e)}}),QUnit.done(function(d){if(console.log('\n'),0<a.length)for(var e=0;e<a.length;e++)console.error(a[e]+'\n');var f=['Time: '+d.runtime+'ms','Total: '+d.total,'Passed: '+d.passed,'Failed: '+d.failed];console.log(f.join(', ')),window.qunitDone=d})}const qunit_script=logQUnit.toString();function check(){if(window.qunitDone)return window.qunitDone.failed}const check_script=check.toString();